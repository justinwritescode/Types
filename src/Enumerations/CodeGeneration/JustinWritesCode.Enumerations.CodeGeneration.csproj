<!--
 * JustinWritesCode.Enumerations.CodeGeneration.csproj
 * 
 *   Created: 2022-11-20-07:14:18
 *   Modified: 2022-12-05-03:49:17
 * 
 *   Author: Justin Chase <justin@justinwritescode.com>
 *   
 *   Copyright Â© 2022-2023 Justin Chase, All Rights Reserved
 *      License: MIT (https://opensource.org/licenses/MIT)
-->

<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <PackageId>JustinWritesCode.Enumerations.CodeGeneration</PackageId>
    <AssemblyName>$(PackageId)</AssemblyName>
    <RootNamespace>$(PackageId)</RootNamespace>
    <TargetFramework>net7.0</TargetFramework>
    <IsRoslynComponent>true</IsRoslynComponent>
    <ProjectGuid>54d0d4e7-4f62-4d70-8fd0-ead0d34fc585</ProjectGuid>
    <SlnGenSolutionFolder>Enumerations</SlnGenSolutionFolder>
    <EmitNuspec>true</EmitNuspec>
    <PreserveCompilationContext>true</PreserveCompilationContext>
    <DefineConstants>$(DefineConstants);SCRIBAN_SIGNED;IS_EXTERNALI_INIT_DEFINED;SCRIBAN_PUBLIC</DefineConstants>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.CodeAnalysis.Analyzers" PrivateAssets="all" IncludeAssets="runtime; build; native; contentfiles; analyzers; buildtransitive" />
    <PackageReference Include="Microsoft.CodeAnalysis.CSharp.Workspaces" />
    <PackageReference Include="Microsoft.CodeAnalysis.Common" />
    <PackageReference Include="System.Text.Json" />
    <PackageReference Include="ThisAssembly" />
    <!-- <PackageReference Include="JustinWritesCode.CodeGeneration.Constants" IncludeAssets="ContentFiles" ExcludeAssets="Lib;Runtime;Compile;Native;Analyzers" /> -->
  </ItemGroup>
  <!-- <ItemGroup Condition="'$(Configuration)' != 'Testing' And '$(Configuration)' != 'Local'"> -->
    <ItemGroup>
    <!-- <ProjectReference Include="../Enumeration/JustinWritesCode.Enumerations.Enumeration.csproj" ExcludeAssets="ContentFiles" PrivateAssets="All" /> -->
    <PackageReference Include="JustinWritesCode.Enumerations.Enumeration" ExcludeAssets="ContentFiles;Lib;Runtime;Build;Analyzers;Native" IncludeAssets="Compile" PrivateAssets="All" />
    <PackageReference Include="JustinWritesCode.System.Extensions" IncludeAssets="ContentFiles;Build" ExcludeAssets="Lib;Runtime;Source;Native;Analyzers" PrivateAssets="All" />
    <PackageReference Include="JustinWritesCode.CodeGeneration.Constants-Scriban.Bundled" IncludeAssets="ContentFiles;Build" ExcludeAssets="Lib;Runtime;Source;Native;Analyzers" PrivateAssets="All" />
    <PackageReference Include="Microsoft.CSharp" VersionOverride="4.5.0" PrivateAssets="All" />
    <!-- <ProjectReference Include="../../../../CodeGeneration/src/Constants/JustinWritesCode.CodeGeneration.Constants.csproj" IncludeAssets="ContentFiles" ExcludeAssets="Lib;Runtime;Compile;Native;Analyzers" /> -->
  </ItemGroup>
  <!-- <ItemGroup Condition="'$(Configuration)' == 'Testing' Or '$(Configuration)' == 'Local'">
    <ProjectReference Include="../../Enumerations/Enumeration/JustinWritesCode.Enumerations.Enumeration.csproj" />
  </ItemGroup> -->
  
  <ItemGroup>
    <Compile Remove="./Resources/*" />
    <EmbeddedResource Include="./Resources/**/*" />
    <EmbeddedResource Include="./Constants/TypeToGenerate.cs" LogicalName="%(Filename)%(Extension)" />
    <PackageReference Remove="System.Xml.XDocument" />
    <PackageReference Update="System.Xml.XDocument" Aliases="XDocument" />
    <!-- <Compile Include="../../Extensions/System/StringExtensions.cs" /> -->
    <Reference Remove="System.Xml.XDocument, Version=4.0.10.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
    <Reference Remove="System.Xml.XDocument" />
  </ItemGroup>

  <PropertyGroup>
    <IncludeBuildOutput>true</IncludeBuildOutput>
  </PropertyGroup>

  <ItemGroup>
    <!-- <None Update="$(OutputPath)\$(AssemblyName).dll" PackagePath="analyzers/dotnet/cs/$(AssemblyName).dll" Visible="false" /> -->
    <PackageFile Include="$(OutputPath)\$(AssemblyName).dll" PackagePath="analyzers/dotnet/cs/$(AssemblyName).dll" Visible="false" />
    <PackageFile Include="$(OutputPath)\*.dll" PackagePath="lib/$(TargetFramework)/%(Filename)%(Extension)" Visible="false" />
  </ItemGroup>
  <Target Name="FixBadReferenceAssembly" BeforeTargets="BeforeBuild">
    <ItemGroup>
      <!-- <Reference Update="System.Xml.XDocument" Aliases="XDocument" /> -->
      <!-- <Reference Remove="System.Xml.XDocument" /> -->
      <!-- <Reference Remove="netstandard.library" /> -->
      <PackageReference Update="System.Xml.XDocument" Aliases="XDocument" />
      <!-- <Reference Update="System.Xml.XDocument, Version=4.0.10.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" Aliases="XDocument" /> -->
    </ItemGroup>
  </Target>
  <Target Name="FixDuplicateXmlFiles" AfterTargets="GetPackageContents" BeforeTargets="Pack">
    <!-- <RemoveDuplicates Inputs="@(None)">
      <Output TaskParameter="Filtered" ItemName="FilteredNones" />
    </RemoveDuplicates>
    <RemoveDuplicates Inputs="@(PackageFile)">
      <Output TaskParameter="Filtered" ItemName="FilteredPackageFiles" />
    </RemoveDuplicates> -->
    <ItemGroup>
      <!-- <None Remove="@(None)" />
      <PackageFile Remove="@(PackageFile)" />
      <None Include="@(FilteredNones)" />
      <PackageFile Include="@(FilteredPackageFiles)" /> -->
      <None Remove="**/*.xml" />
      <PackageFile Remove="**/*.xml" />
    </ItemGroup>
  </Target>
  <ItemGroup>
    <Using Include="System.Convert" Alias="Convert" />
  </ItemGroup>
  <!-- DLL Merging -->
  <!-- <Target Name="ILRepack" AfterTargets="Build">
    <ItemGroup>
      <InputAssemblies Include="$(PkgMicrosoft_Extensions_Logging_Abstractions)/lib/netstandard2.0/Microsoft.Extensions.Logging.Abstractions.dll" />
      <InputAssemblies Include="$(PkgMicrosoft_Extensions_Logging)/lib/netstandard2.0/Microsoft.Extensions.Logging.dll" />
      <InputAssemblies Include="$(OutputPath)$(AssemblyName).dll" />
      <InputAssemblies Include="$(AssemblyName).dll" />
      <OutputAssembly Include="$(OutputPath)$(AssemblyName).dll" />
    </ItemGroup>

    <Message Text="Merging: @(InputAssemblies) into @(OutputAssembly)" Importance="High" />

    <ILRepack
      OutputType="Dll"
      MainAssembly="$(AssemblyName).dll"
      OutputAssembly="@(OutputAssembly)"
      InputAssemblies="@(InputAssemblies)"
      WorkingDirectory="$(OutputPath)" />
  </Target> -->
</Project>
